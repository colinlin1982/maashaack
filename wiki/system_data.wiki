#summary The system.data package : interfaces and implementations
#labels Documentation,Framework

= Introduction =

<a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/"><img alt="Licence Creative Commons" style="border-width:0" src="http://i.creativecommons.org/l/by-sa/2.0/uk/88x31.png" /> </a>   

<g:plusone size="medium"></g:plusone>

An *abstract data type* (*ADT*) is a model for a certain class of data structures that have similar behavior; or for certain data types of one or more programming languages that have similar semantics.

The collections framework is a unified architecture for representing and manipulating collections, allowing them to be manipulated independently of the details of their representation. It reduces programming effort while increasing performance.

[http://code.google.com/p/maashaack/source/browse/#svn%2Fpackages%2Fsystem_data%2Ftrunk http://maashaack.googlecode.com/svn/gfx/framework/packages/system.data.png]

The *system.data collection* framework is loosely inspired on the [http://download.oracle.com/javase/1.4.2/docs/guide/collections/ JAVA Collections Framework] and the [http://commons.apache.org/collections/ Jakarta Collections Framework].

This framework is inspired on interfaces to defines the different types of collections :
 * [system_data_maps Map]
 * Bag
 * Collections
 * Iterator
 * Set
 * Queue & Stack